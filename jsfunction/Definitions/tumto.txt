4. Function Hoisting (การย้ายฟังก์ชันขึ้น)
โจทย์:
เขียนโค้ดที่เรียกใช้ฟังก์ชัน addNumbers ก่อนที่จะประกาศฟังก์ชัน แล้วตรวจสอบผลลัพธ์

สร้างฟังก์ชัน sayHello(name) ที่รับชื่อเป็นพารามิเตอร์และแสดงข้อความ "Hello, [name]" หลังจากนั้นเรียกใช้ฟังก์ชันก่อนการประกาศ

เขียนโค้ดที่ประกาศฟังก์ชัน multiply(a, b) หลังจากที่เรียกใช้มัน แล้วตรวจสอบว่ามันทำงานได้

สร้างฟังก์ชัน subtract(a, b) และทดสอบการเรียกใช้ฟังก์ชันก่อนการประกาศ

เขียนฟังก์ชัน square(num) และทดสอบการเรียกใช้ก่อนประกาศ ฟังก์ชันควรคืนค่ากำลังสองของตัวเลข

5. Self-Invoking Functions (ฟังก์ชันที่เรียกตัวเอง)
โจทย์:
เขียนฟังก์ชันที่เรียกตัวเองเพื่อแสดงข้อความ "This is a self-invoking function"

สร้างฟังก์ชันที่ใช้การเรียกตัวเอง (self-invoking function) เพื่อคำนวณผลบวกของตัวเลข 1 ถึง 5

เขียนฟังก์ชันที่เรียกตัวเองเพื่อแสดงข้อความว่า "I am executed automatically"

สร้างฟังก์ชัน self-invoking ที่รับสองตัวเลขและแสดงผลลัพธ์ของการบวกกัน

เขียนฟังก์ชันที่เรียกตัวเองเพื่อแสดงผลลัพธ์ของการหาผลคูณของตัวเลข 6 และ 7

6. Functions as Values (ฟังก์ชันเป็นค่า)
โจทย์:
สร้างตัวแปรที่เก็บฟังก์ชัน multiply(a, b) แล้วเรียกใช้มันผ่านตัวแปร

สร้างตัวแปร add ที่เก็บฟังก์ชันการบวกแล้วเรียกใช้งานผ่านตัวแปรนั้น

สร้างตัวแปร greet ที่เก็บฟังก์ชันที่แสดงข้อความทักทาย "Hello, [name]" และเรียกใช้มัน

สร้างตัวแปร isPositive ที่เก็บฟังก์ชันตรวจสอบว่าเลขที่ให้มาเป็นจำนวนบวกหรือไม่

สร้างตัวแปร getLength ที่เก็บฟังก์ชันเพื่อหาความยาวของสตริง แล้วเรียกใช้งานมัน

7. Functions are Objects (ฟังก์ชันเป็นออบเจ็กต์)
โจทย์:
เขียนฟังก์ชันที่มีพารามิเตอร์สองตัวและใช้ arguments.length เพื่อแสดงจำนวนพารามิเตอร์ที่ถูกส่งเข้ามา

ใช้ toString() เพื่อแปลงฟังก์ชันเป็นสตริงแล้วแสดงผล

สร้างฟังก์ชันที่รับพารามิเตอร์และใช้ arguments เพื่อแสดงค่าในอาร์กิวเมนต์ทั้งหมด

เขียนฟังก์ชันที่มีการใช้ arguments.length เพื่อหาจำนวนอาร์กิวเมนต์ที่ถูกส่ง

สร้างฟังก์ชันที่ใช้ toString() แปลงฟังก์ชันเป็นข้อความแล้วแสดงผลลัพธ์

8. Arrow Functions (ฟังก์ชันลูกศร)
โจทย์:
เขียนฟังก์ชันลูกศร add(a, b) ที่รับพารามิเตอร์สองตัวและคืนค่าผลบวกของทั้งสอง

สร้างฟังก์ชันลูกศร square(num) ที่รับพารามิเตอร์และคืนค่ากำลังสองของมัน

เขียนฟังก์ชันลูกศร isOdd(num) ที่ตรวจสอบว่าเลขที่ให้มาเป็นเลขคี่หรือไม่

สร้างฟังก์ชันลูกศร multiply(a, b) ที่รับพารามิเตอร์สองตัวและคืนค่าผลคูณ

เขียนฟังก์ชันลูกศร greet(name) ที่รับชื่อและแสดงข้อความ "Hello, [name]!"