// Functions Can Be Used as Values คืออะไร?
// ใน JavaScript ฟังก์ชันเป็น "ค่าประเภทหนึ่ง" (value) ซึ่งหมายความว่าเราสามารถ:
// ✅ เก็บฟังก์ชันในตัวแปร
// ✅ ส่งฟังก์ชันเป็นพารามิเตอร์ให้ฟังก์ชันอื่น
// ✅ ใช้ฟังก์ชันในนิพจน์ทางคณิตศาสตร์


// สร้างตัวแปรที่เก็บฟังก์ชัน multiply(a, b) แล้วเรียกใช้มันผ่านตัวแปร

    function multiply(a, b){
        return a * b;
    };

    let x = multiply(2,3);
    console.log(x);

console.log("=================================================================================================");

// สร้างตัวแปร add ที่เก็บฟังก์ชันการบวกแล้วเรียกใช้งานผ่านตัวแปรนั้น

    function add (a,b){
        return a + b;
    }

    let X = add(2,3);
    console.log(X);

console.log("=================================================================================================");

// สร้างตัวแปร greet ที่เก็บฟังก์ชันที่แสดงข้อความทักทาย "Hello, [name]" และเรียกใช้มัน

    function SayHello (name) {
        return `hello ${name}`;
    }

    let greet = SayHello("zero two");
    console.log(greet);

console.log("=================================================================================================");

// สร้างตัวแปร isPositive ที่เก็บฟังก์ชันตรวจสอบว่าเลขที่ให้มาเป็นจำนวนบวกหรือไม่

    function CheckNum (num) {
        if(num >= 1){
            return "นี่คือจำนวนบวก";
        }else{
            return "นี่ไม่ใช่จำนวนบวก";
        }
    };

    let isPositive = CheckNum(-1);
    console.log(isPositive);

console.log("=================================================================================================");

// สร้างตัวแปร getLength ที่เก็บฟังก์ชันเพื่อหาความยาวของสตริง แล้วเรียกใช้งานมัน

    function LengthStr (str) {
        return str.length;
    }

    let getLength = LengthStr("hello");
    console.log(getLength);

console.log("=================================================================================================");
console.log("=================================================================================================");
console.log("=================================================================================================");
console.log("=================================================================================================");

