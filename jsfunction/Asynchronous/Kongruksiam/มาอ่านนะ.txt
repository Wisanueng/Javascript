โจทย์ที่ 2: การคำนวณผลลัพธ์ที่ใช้เวลา
คำอธิบาย: เราจะสร้างฟังก์ชัน calculateResult() ซึ่งจะทำการคำนวณการหารของ 2 จำนวน เช่น 10 / 2 โดยใช้เวลา 2 วินาทีในการคำนวณ เมื่อคำนวณเสร็จแล้วให้แสดงข้อความ "ผลลัพธ์การคำนวณคือ: [ผลลัพธ์]" โดยที่ [ผลลัพธ์] คือผลลัพธ์จากการคำนวณ.

โค้ดเฉลย:
javascript
Copy
// ฟังก์ชันจำลองการคำนวณที่ใช้เวลา
function calculateResult() {
  return new Promise((resolve, reject) => {
    setTimeout(() => {
      const result = 10 / 2; // ตัวอย่างการคำนวณ
      resolve(result); // คืนค่าเมื่อคำนวณเสร็จ
    }, 2000); // ใช้เวลา 2 วินาที
  });
}

// ฟังก์ชันที่ใช้ async/await
async function getCalculationResult() {
  console.log("กำลังคำนวณ...");

  // ใช้ await รอให้ฟังก์ชัน calculateResult() เสร็จ
  const result = await calculateResult();

  console.log(`ผลลัพธ์การคำนวณคือ: ${result}`); // เมื่อคำนวณเสร็จแล้วจะแสดงผล
}

getCalculationResult();  // เรียกใช้งานฟังก์ชัน
การอธิบาย:
calculateResult(): ฟังก์ชันนี้จะทำการคำนวณ (ในตัวอย่างนี้คือการหาร 10 / 2) โดยใช้ setTimeout เพื่อจำลองการทำงานที่ใช้เวลา 2 วินาทีแล้วจึงคืนค่าเป็นผลลัพธ์ที่คำนวณได้ (resolve).

getCalculationResult(): ฟังก์ชันนี้เป็นฟังก์ชัน async ซึ่งใช้ await รอให้ calculateResult() เสร็จสิ้นก่อนที่จะไปแสดงผลลัพธ์ของการคำนวณ.

ตัวอย่างผลลัพธ์ที่คาดหวัง:
makefile
Copy
กำลังกำลังคำนวณ...
ผลลัพธ์การคำนวณคือ: 5
สรุป: โค้ดนี้จำลองการคำนวณที่ใช้เวลาและใช้ async/await เพื่อให้โปรแกรมรอผลลัพธ์จากการคำนวณให้เสร็จสิ้นก่อนที่จะดำเนินการต่อไปครับ!